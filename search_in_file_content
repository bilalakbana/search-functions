ugrep-fzf() {
    if [[ -n "$TMUX" ]]; then
        original_name=$(tmux display-message -p '#W')  # Save current window name
        tmux rename-window ugrep
    fi

    local GITIGNORE_OPT=""
    [[ -f .gitignore ]] && GITIGNORE_OPT="--exclude-from=.gitignore"
    local UG_PREFIX="ugrep -RU --sort=rname --files-with-matches --smart-case --ignore-binary $GITIGNORE_OPT"
    local COLOR_AND_SORT="stdbuf -oL sed 's/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/' | stdbuf -oL sed 's/\//\x1b[33m\/\x1b[34m/g' | stdbuf -oL sed 's/^[^/]\\+$/\x1b[32m&/'"

    if [[ "$1" =~ ^--glob= ]]; then
        local patterns="${1#--glob=}"
        UG_PREFIX="$UG_PREFIX --glob='$patterns'"
        shift
    fi

    FZF_DEFAULT_COMMAND="$UG_PREFIX '$1' . | $COLOR_AND_SORT" \
    fzf --ansi --no-sort --style full --wrap --delimiter : \
        --preview 'printf "\033[31mFile Path :\033[0m " && echo {} | sed "s/^[^/]\\+$/\x1b[32m&/" | sed "s/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/" | sed "s/\//\x1b[33m\/\x1b[34m/g";if [[ ! -z {q} ]]; then printf "\033[31mMatches   :\033[31m ";ugrep -o --smart-case -U -- {q} {} 2>/dev/null | wc -l;echo;GREP_COLORS="ln=32:sl=35:cx=35:mt=1;31:fn=32" ugrep --smart-case -U --color=always -n -C 8 -- {q} {} | tr -d "\r";else printf "\033[31mMatches   :\033[31m \n\n";ugrep -U --color=always -n --colors=line=32,sl=35,ms=35,mc=35 "" {} | tr -d "\r";fi' \
        --color 'preview-fg:bright-magenta,fg:252,fg+:252,bg:234,bg+:235,hl:magenta,hl+:magenta,info:144,border:240,prompt:161,pointer:161,marker:118,spinner:118,header:168' \
        --phony -q "$1" \
        --border top \
        --border-label " $(echo $PWD | sed "s/^[^/]\\+$/\x1b[32m&/" | sed "s/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/" | sed "s/\//\x1b[33m\/\x1b[34m/g") " \
        --bind "change:reload:$UG_PREFIX {q} . | $COLOR_AND_SORT || true" \
        --bind "ctrl-r:reload:$UG_PREFIX {q} . | $COLOR_AND_SORT || true" \
        --bind "ctrl-l:toggle-preview" \
        --bind 'home:last,end:first' \
        --bind "alt-up:preview-page-up" \
        --bind "alt-down:preview-page-down" \
        --bind 'enter:execute-silent(nohup xdg-open {})' \
        --bind "ctrl-o:execute([[ -z {q} ]] && tmux new-window -n 'nvim' nvim {} || tmux new-window -n 'nvim' nvim {} -c /{q} -c \"set hlsearch\"; tmux select-pane -T editor)" \
        --bind "ctrl-e:execute-silent(~/.SearchFunctions/sub-functions/open_in_file_manager {})" \
        --bind "ctrl-c:execute-silent(echo -n {} | wl-copy)" \
		--bind "ctrl-t:execute-silent(tmux new-window -n infile ~/.SearchFunctions/sub-functions/search_in_single_file \"$(realpath \"{}\"\") {q}; tmux select-pane -T file-content)" \
		--bind "ctrl-u:execute-silent(tmux new-window -n diff ~/.SearchFunctions/sub-functions/show_logs \"$(realpath \"{}\"\"); tmux select-pane -T git)" \
		--bind "alt-j:execute-silent(tmux new-window -n folders ~/.SearchFunctions/sub-functions/folder_list_ugrep; tmux select-pane -T folder-list)" \
		--bind "alt-u:execute-silent(tmux new-window -n logs ~/.SearchFunctions/sub-functions/git_log_file \"$(realpath \"{}\"\"); tmux select-pane -T git)" \
		--bind "ctrl-j:execute-silent(tmux new-window -n files ~/.SearchFunctions/sub-functions/file_list; tmux select-pane -T file-list)" \
        --preview-window "up:70%:wrap"

    if [[ -n "$TMUX" ]]; then
        tmux rename-window "$original_name"  # Restore original name
    fi
}
ugrep-fzf-plus() {
    if [[ -n "$TMUX" ]]; then
        original_name=$(tmux display-message -p '#W')  # Save current window name
        tmux rename-window ugrep
    fi

    local GITIGNORE_OPT=""
    [[ -f .gitignore ]] && GITIGNORE_OPT="--exclude-from=.gitignore"
    local UG_PREFIX="ugrep+ -RU --sort=rname --files-with-matches --smart-case --ignore-binary $GITIGNORE_OPT"
    local COLOR_AND_SORT="stdbuf -oL sed 's/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/' | stdbuf -oL sed 's/\//\x1b[33m\/\x1b[34m/g' | stdbuf -oL sed 's/^[^/]\\+$/\x1b[32m&/'"

    if [[ "$1" =~ ^--glob= ]]; then
        local patterns="${1#--glob=}"
        UG_PREFIX="$UG_PREFIX --glob='$patterns'"
        shift
    fi

    FZF_DEFAULT_COMMAND="$UG_PREFIX '$1' . | $COLOR_AND_SORT" \
    fzf --ansi --no-sort --style full --wrap --delimiter : \
        --preview 'printf "\033[31mFile Path :\033[0m " && echo {} | sed "s/^[^/]\\+$/\x1b[32m&/" | sed "s/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/" | sed "s/\//\x1b[33m\/\x1b[34m/g";if [[ ! -z {q} ]]; then printf "\033[31mMatches   :\033[31m ";ugrep+ -o --smart-case -U -- {q} {} 2>/dev/null | wc -l;echo;GREP_COLORS="ln=32:sl=35:cx=35:mt=1;31:fn=32" ugrep+ --smart-case -U --color=always -n -C 8 -- {q} {} | tr -d "\r";else printf "\033[31mMatches   :\033[31m \n\n";ugrep+ -U --color=always -n --colors=line=32,sl=35,ms=35,mc=35 "" {} | tr -d "\r";fi' \
        --color 'preview-fg:bright-magenta,fg:252,fg+:252,bg:234,bg+:235,hl:magenta,hl+:magenta,info:144,border:240,prompt:161,pointer:161,marker:118,spinner:118,header:168' \
        --phony -q "$1" \
        --border top \
        --border-label " $(echo $PWD | sed "s/^[^/]\\+$/\x1b[32m&/" | sed "s/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/" | sed "s/\//\x1b[33m\/\x1b[34m/g") " \
        --bind "change:reload:$UG_PREFIX {q} . | $COLOR_AND_SORT || true" \
        --bind "ctrl-r:reload:$UG_PREFIX {q} . | $COLOR_AND_SORT || true" \
        --bind "ctrl-l:toggle-preview" \
        --bind 'home:last,end:first' \
        --bind "alt-up:preview-page-up" \
        --bind "alt-down:preview-page-down" \
        --bind 'enter:execute-silent(nohup xdg-open {})' \
        --bind "ctrl-o:execute([[ -z {q} ]] && tmux new-window -n 'nvim' nvim {} || tmux new-window -n 'nvim' nvim {} -c /{q} -c \"set hlsearch\"; tmux select-pane -T editor)" \
        --bind "ctrl-e:execute-silent(~/.SearchFunctions/sub-functions/open_in_file_manager {})" \
        --bind "ctrl-c:execute-silent(echo -n {} | wl-copy)" \
		--bind "ctrl-t:execute-silent(tmux new-window -n infile ~/.SearchFunctions/sub-functions/search_in_single_file \"$(realpath \"{}\"\") {q}; tmux select-pane -T file-content)" \
		--bind "ctrl-u:execute-silent(tmux new-window -n diff ~/.SearchFunctions/sub-functions/show_logs \"$(realpath \"{}\"\"); tmux select-pane -T git)" \
		--bind "alt-j:execute-silent(tmux new-window -n folders ~/.SearchFunctions/sub-functions/folder_list_ugrep_plus; tmux select-pane -T folder-list)" \
		--bind "alt-u:execute-silent(tmux new-window -n logs ~/.SearchFunctions/sub-functions/git_log_file \"$(realpath \"{}\"\"); tmux select-pane -T git)" \
		--bind "ctrl-j:execute-silent(tmux new-window -n files ~/.SearchFunctions/sub-functions/file_list; tmux select-pane -T file-list)" \
        --preview-window "up:70%:wrap"

    if [[ -n "$TMUX" ]]; then
        tmux rename-window "$original_name"  # Restore original name
    fi
}
rga-fzf() {
    if [[ -n "$TMUX" ]]; then
        original_name=$(tmux display-message -p '#W')  # Save current window name
        tmux rename-window rga
    fi

    local GLOB_PATTERN=()
    if [[ "$1" == "--glob="* ]]; then
        patterns="${1#--glob=}"
        for pattern in $(echo "$patterns" | tr ',' ' '); do
            GLOB_PATTERN+=("-g")
            GLOB_PATTERN+=("'$pattern'")
        done
        shift 1
    fi

    local RG_PREFIX="rga --files-with-matches ${GLOB_PATTERN[@]}"
    local COLOR_AND_SORT="stdbuf -oL sed 's/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/' | stdbuf -oL sed 's/\\//\x1b[33m\/\x1b[34m/g' | stdbuf -oL sed 's/^[^/]\\+$/\x1b[32m&/'"
    FZF_DEFAULT_COMMAND="$RG_PREFIX '$1' 2>/dev/null | $COLOR_AND_SORT || true" \
        fzf --sort --ansi --style full \
        --preview 'printf "\033[31mFile Path:\033[0m %s\n" {};if [[ ! -z {q} ]]; then printf "\033[31mMatches:\033[0m ";rga -o {q} {} 2>/dev/null | wc -l;echo;rga --pretty --context 10 {q} {} 2>/dev/null;else printf "\033[31mMatches:\033[0m \n\n";rga --pretty --context 10 "" {} 2>/dev/null;fi' \
        --color 'fg:bright-cyan,fg+:bright-cyan,preview-fg:bright-magenta,bg:234,bg+:235,hl:magenta,hl+:magenta,info:144,border:240,prompt:161,pointer:161,marker:118,spinner:118,header:168' \
        --phony -q "$1" \
        --border top \
        --border-label " $(echo $PWD | sed "s/^[^/]\\+$/\x1b[32m&/" | sed "s/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/" | sed "s/\//\x1b[33m\/\x1b[34m/g") " \
        --bind "change:reload:$RG_PREFIX {q} 2>/dev/null | $COLOR_AND_SORT || true" \
        --bind "ctrl-r:reload:$RG_PREFIX {q} 2>/dev/null | $COLOR_AND_SORT || true" \
        --bind 'home:last,end:first' \
        --bind "alt-up:preview-page-up" \
        --bind "alt-down:preview-page-down" \
        --bind "ctrl-l:toggle-preview" \
        --bind 'enter:execute-silent(nohup xdg-open {})' \
        --bind "ctrl-o:execute([[ -z {q} ]] && tmux new-window -n 'nvim' nvim {} || tmux new-window -n 'nvim' nvim {} -c /{q} -c \"set hlsearch\"; tmux select-pane -T editor)" \
        --bind "ctrl-e:execute-silent(~/.SearchFunctions/sub-functions/open_in_file_manager {})" \
        --bind "ctrl-c:execute-silent(echo -n {} | wl-copy)" \
		--bind "ctrl-t:execute-silent(tmux new-window -n infile ~/.SearchFunctions/sub-functions/search_in_single_file \"$(realpath \"{}\"\") {q}; tmux select-pane -T file-content)" \
		--bind "ctrl-u:execute-silent(tmux new-window -n diff ~/.SearchFunctions/sub-functions/show_logs \"$(realpath \"{}\"\"); tmux select-pane -T git)" \
		--bind "alt-j:execute-silent(tmux new-window -n folders ~/.SearchFunctions/sub-functions/folder_list_ripgrep; tmux select-pane -T folder-list)" \
		--bind "alt-u:execute-silent(tmux new-window -n logs ~/.SearchFunctions/sub-functions/git_log_file \"$(realpath \"{}\"\"); tmux select-pane -T git)" \
		--bind "ctrl-j:execute-silent(tmux new-window -n files ~/.SearchFunctions/sub-functions/file_list; tmux select-pane -T file-list)" \
        --preview-window "up:70%:wrap"

    if [[ -n "$TMUX" ]]; then
        tmux rename-window "$original_name"  # Restore original name
    fi
}
rga-fzfS() {
    if [[ -n "$TMUX" ]]; then
        original_name=$(tmux display-message -p '#W')  # Save current window name
        tmux rename-window rga
    fi

    local GLOB_PATTERN=()
    if [[ "$1" == "--glob="* ]]; then
        patterns="${1#--glob=}"
        for pattern in $(echo "$patterns" | tr ',' ' '); do
            GLOB_PATTERN+=("-g")
            GLOB_PATTERN+=("'$pattern'")
        done
        shift 1
    fi

    local RG_PREFIX="rga --files-with-matches ${GLOB_PATTERN[@]}"
    local COLOR_AND_SORT="stdbuf -oL sed 's/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/' | stdbuf -oL sed 's/\\//\x1b[33m\/\x1b[34m/g' | stdbuf -oL sed 's/^[^/]\\+$/\x1b[32m&/'"
    FZF_DEFAULT_COMMAND="$RG_PREFIX '$1' | LC_ALL=C sort -r 2>/dev/null | $COLOR_AND_SORT || true" \
        fzf --sort --ansi --style full \
        --preview 'printf "\033[31mFile Path:\033[0m %s\n" {};if [[ ! -z {q} ]]; then printf "\033[31mMatches:\033[0m ";rga -o {q} {} 2>/dev/null | wc -l;echo;rga --pretty --context 10 {q} {} 2>/dev/null;else printf "\033[31mMatches:\033[0m \n\n";rga --pretty --context 10 "" {} 2>/dev/null;fi' \
        --color 'fg:bright-cyan,fg+:bright-cyan,preview-fg:bright-magenta,bg:234,bg+:235,hl:magenta,hl+:magenta,info:144,border:240,prompt:161,pointer:161,marker:118,spinner:118,header:168' \
        --phony -q "$1" \
        --border top \
        --border-label " $(echo $PWD | sed "s/^[^/]\\+$/\x1b[32m&/" | sed "s/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/" | sed "s/\//\x1b[33m\/\x1b[34m/g") " \
        --bind "change:reload:$RG_PREFIX {q} 2>/dev/null | $COLOR_AND_SORT || true" \
        --bind "ctrl-r:reload:$RG_PREFIX {q} 2>/dev/null | $COLOR_AND_SORT || true" \
        --bind 'home:last,end:first' \
        --bind "alt-up:preview-page-up" \
        --bind "alt-down:preview-page-down" \
        --bind "ctrl-l:toggle-preview" \
        --bind 'enter:execute-silent(nohup xdg-open {})' \
        --bind "ctrl-o:execute([[ -z {q} ]] && tmux new-window -n 'nvim' nvim {} || tmux new-window -n 'nvim' nvim {} -c /{q} -c \"set hlsearch\"; tmux select-pane -T editor)" \
        --bind "ctrl-e:execute-silent(~/.SearchFunctions/sub-functions/open_in_file_manager {})" \
        --bind "ctrl-c:execute-silent(echo -n {} | wl-copy)" \
		--bind "ctrl-t:execute-silent(tmux new-window -n infile ~/.SearchFunctions/sub-functions/search_in_single_file \"$(realpath \"{}\"\") {q}; tmux select-pane -T file-content)" \
		--bind "ctrl-u:execute-silent(tmux new-window -n diff ~/.SearchFunctions/sub-functions/show_logs \"$(realpath \"{}\"\"); tmux select-pane -T git)" \
		--bind "alt-j:execute-silent(tmux new-window -n folders ~/.SearchFunctions/sub-functions/folder_list_ripgrepS; tmux select-pane -T folder-list)" \
		--bind "alt-u:execute-silent(tmux new-window -n logs ~/.SearchFunctions/sub-functions/git_log_file \"$(realpath \"{}\"\"); tmux select-pane -T git)" \
		--bind "ctrl-j:execute-silent(tmux new-window -n files ~/.SearchFunctions/sub-functions/file_list; tmux select-pane -T file-list)" \
        --preview-window "up:70%:wrap"

    if [[ -n "$TMUX" ]]; then
        tmux rename-window "$original_name"  # Restore original name
    fi
}
