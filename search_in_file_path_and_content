ugf() {
    if [[ -n "$TMUX" ]]; then
        original_name=$(tmux display-message -p '#W')  # Save current window name
        tmux rename-window ugf
    fi

    local GITIGNORE_OPT=""
    [[ -f .gitignore ]] && GITIGNORE_OPT="--exclude-from=.gitignore"

    local UG_CMD="ug -RU --color=always --sort=rname --line-number --ignore-binary --no-heading $GITIGNORE_OPT"

    if [[ "$1" =~ ^--glob= ]]; then
        local patterns="${1#--glob=}"
        UG_CMD="$UG_CMD --glob='$patterns'"
        shift
    fi

    UG_CMD="$UG_CMD '${*:-}' ."

    FZF_DEFAULT_COMMAND="$UG_CMD" \
    fzf --ansi --delimiter : --no-sort --style full --wrap --exact \
        --color 'preview-fg:bright-magenta,fg:252,fg+:252,bg:234,bg+:235,hl:green:underline,hl+:green:underline:reverse,info:144,border:240,prompt:161,pointer:161,marker:118,spinner:118,header:168' \
        --preview 'batcat --color=always {1} --highlight-line {2}' \
        --border top \
        --border-label " $(echo $PWD | sed "s/^[^/]\\+$/\x1b[32m&/" | sed "s/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/" | sed "s/\//\x1b[33m\/\x1b[34m/g") " \
        --preview-window 'up:70%:wrap:+{2}+3/3,~3' \
        --bind "ctrl-r:reload:$UG_CMD || echo 'No results found'" \
        --bind "ctrl-l:toggle-preview" \
        --bind 'home:last,end:first' \
        --bind "alt-up:preview-page-up" \
        --bind "alt-down:preview-page-down" \
        --bind 'enter:execute-silent(nohup xdg-open {1})' \
        --bind "ctrl-o:execute-silent(tmux new-window -n 'nvim'  nvim {1}; tmux select-pane -T editor)" \
        --bind "ctrl-e:execute-silent(~/.SearchFunctions/sub-functions/open_in_file_manager {1})" \
        --bind "ctrl-c:execute-silent(echo -n {1} | wl-copy)" \
		--bind "ctrl-t:execute-silent(tmux new-window -n infile ~/.SearchFunctions/sub-functions/search_in_single_file \"$(realpath \"{1}\"\"); tmux select-pane -T file-content)" \
		--bind "ctrl-u:execute-silent(tmux new-window -n diff ~/.SearchFunctions/sub-functions/show_logs \"$(realpath \"{1}\"\"); tmux select-pane -T git)" \
		--bind "alt-j:execute-silent(tmux new-window -n folders ~/.SearchFunctions/sub-functions/folder_list_ugf; tmux select-pane -T folder-list)" \
		--bind "alt-u:execute-silent(tmux new-window -n logs ~/.SearchFunctions/sub-functions/git_log_file \"$(realpath \"{1}\"\"); tmux select-pane -T git)" \
		--bind "ctrl-j:execute-silent(tmux new-window -n files ~/.SearchFunctions/sub-functions/file_list; tmux select-pane -T file-list)"

    if [[ -n "$TMUX" ]]; then
        tmux rename-window "$original_name"  # Restore original name
    fi
}
ugf-plus() {
    if [[ -n "$TMUX" ]]; then
        original_name=$(tmux display-message -p '#W')  # Save current window name
        tmux rename-window ugf
    fi

    local GITIGNORE_OPT=""
    [[ -f .gitignore ]] && GITIGNORE_OPT="--exclude-from=.gitignore"

    local UG_CMD="ug+ -RU --color=always --sort=rname --line-number --ignore-binary --no-heading $GITIGNORE_OPT"

    if [[ "$1" =~ ^--glob= ]]; then
        local patterns="${1#--glob=}"
        UG_CMD="$UG_CMD --glob='$patterns'"
        shift
    fi

    UG_CMD="$UG_CMD '${*:-}' ."

    FZF_DEFAULT_COMMAND="$UG_CMD" \
    fzf --ansi --delimiter : --no-sort --style full --wrap --exact \
        --color 'preview-fg:bright-magenta,fg:252,fg+:252,bg:234,bg+:235,hl:green:underline,hl+:green:underline:reverse,info:144,border:240,prompt:161,pointer:161,marker:118,spinner:118,header:168' \
        --preview 'batcat --color=always {1} --highlight-line {2}' \
        --border top \
        --border-label " $(echo $PWD | sed "s/^[^/]\\+$/\x1b[32m&/" | sed "s/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/" | sed "s/\//\x1b[33m\/\x1b[34m/g") " \
        --preview-window 'up:70%:wrap:+{2}+3/3,~3' \
        --bind "ctrl-r:reload:$UG_CMD || echo 'No results found'" \
        --bind "ctrl-l:toggle-preview" \
        --bind 'home:last,end:first' \
        --bind "alt-up:preview-page-up" \
        --bind "alt-down:preview-page-down" \
        --bind 'enter:execute-silent(nohup xdg-open {1})' \
        --bind "ctrl-o:execute-silent(tmux new-window -n 'nvim'  nvim {1}; tmux select-pane -T editor)" \
        --bind "ctrl-e:execute-silent(~/.SearchFunctions/sub-functions/open_in_file_manager {1})" \
        --bind "ctrl-c:execute-silent(echo -n {1} | wl-copy)" \
		--bind "ctrl-t:execute-silent(tmux new-window -n infile ~/.SearchFunctions/sub-functions/search_in_single_file \"$(realpath \"{1}\"\"); tmux select-pane -T file-content)" \
		--bind "ctrl-u:execute-silent(tmux new-window -n diff ~/.SearchFunctions/sub-functions/show_logs \"$(realpath \"{1}\"\"); tmux select-pane -T git)" \
		--bind "alt-j:execute-silent(tmux new-window -n folders ~/.SearchFunctions/sub-functions/folder_list_ugf_plus; tmux select-pane -T folder-list)" \
		--bind "alt-u:execute-silent(tmux new-window -n logs ~/.SearchFunctions/sub-functions/git_log_file \"$(realpath \"{1}\"\"); tmux select-pane -T git)" \
		--bind "ctrl-j:execute-silent(tmux new-window -n files ~/.SearchFunctions/sub-functions/file_list; tmux select-pane -T file-list)"

    if [[ -n "$TMUX" ]]; then
        tmux rename-window "$original_name"  # Restore original name
    fi
}
rgf() {
    if [[ -n "$TMUX" ]]; then
        original_name=$(tmux display-message -p '#W')  # Save current window name
        tmux rename-window rgf
    fi

    local RG_CMD="rg --color=always --line-number --no-heading"
    [[ "$1" =~ ^--glob= ]] && {
        for pattern in $(echo "${1#--glob=}" | tr ',' ' '); do
            RG_CMD+=" -g '$pattern'"
        done
        shift
    }
    RG_CMD+=" '${*:-}'"

    eval "$RG_CMD" | \
    fzf --ansi --exact --style full --wrap \
        --color 'preview-fg:bright-magenta,fg:252,fg+:252,bg:234,bg+:235,hl:green:underline,hl+:green:underline:reverse,info:144,border:240,prompt:161,pointer:161,marker:118,spinner:118,header:168' \
        --delimiter : \
        --preview 'batcat --color=always {1} --highlight-line {2}' \
        --border top \
        --border-label " $(echo $PWD | sed "s/^[^/]\\+$/\x1b[32m&/" | sed "s/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/" | sed "s/\//\x1b[33m\/\x1b[34m/g") " \
        --preview-window 'up:70%:wrap:+{2}+3/3,~3' \
        --bind "ctrl-r:reload($RG_CMD || rg --files || echo 'No results found')" \
        --bind 'enter:execute-silent(nohup xdg-open {1})' \
        --bind "ctrl-o:execute-silent(tmux new-window -n 'nvim'  nvim {1}); tmux select-pane -T editor" \
        --bind "ctrl-e:execute-silent(~/.SearchFunctions/sub-functions/open_in_file_manager {1})" \
        --bind "ctrl-c:execute-silent(echo -n {1} | wl-copy)" \
		--bind "ctrl-t:execute-silent(tmux new-window -n infile ~/.SearchFunctions/sub-functions/search_in_single_file \"$(realpath \"{1}\"\"); tmux select-pane -T file-content)" \
		--bind "ctrl-u:execute-silent(tmux new-window -n diff ~/.SearchFunctions/sub-functions/show_logs \"$(realpath \"{1}\"\"); tmux select-pane -T git)" \
		--bind "alt-j:execute-silent(tmux new-window -n folders ~/.SearchFunctions/sub-functions/folder_list_rgf; tmux select-pane -T folder-list)" \
		--bind "alt-u:execute-silent(tmux new-window -n logs ~/.SearchFunctions/sub-functions/git_log_file \"$(realpath \"{1}\"\"); tmux select-pane -T git)" \
		--bind "ctrl-j:execute-silent(tmux new-window -n files ~/.SearchFunctions/sub-functions/file_list; tmux select-pane -T file-list)" \
        --bind "ctrl-l:toggle-preview"

    if [[ -n "$TMUX" ]]; then
        tmux rename-window "$original_name"  # Restore original name
    fi
}
rgfS() {
    if [[ -n "$TMUX" ]]; then
        original_name=$(tmux display-message -p '#W')  # Save current window name
        tmux rename-window rgf
    fi

    local RG_CMD="rg --color=always --line-number --no-heading"
    [[ "$1" =~ ^--glob= ]] && {
        for pattern in $(echo "${1#--glob=}" | tr ',' ' '); do
            RG_CMD+=" -g '$pattern'"
        done
        shift
    }
    RG_CMD+=" '${*:-}'"

    eval "$RG_CMD" | LC_ALL=C sort -r | \
    fzf --ansi --exact --no-sort --style full --wrap \
        --color 'preview-fg:bright-magenta,fg:252,fg+:252,bg:234,bg+:235,hl:green:underline,hl+:green:underline:reverse,info:144,border:240,prompt:161,pointer:161,marker:118,spinner:118,header:168' \
        --delimiter : \
        --preview 'batcat --color=always {1} --highlight-line {2}' \
        --border top \
        --border-label " $(echo $PWD | sed "s/^[^/]\\+$/\x1b[32m&/" | sed "s/\\(.*\\/\\)\\(.*\\)/\x1b[34m\\1\x1b[32m\\2/" | sed "s/\//\x1b[33m\/\x1b[34m/g") " \
        --preview-window 'up:70%:wrap:+{2}+3/3,~3' \
        --bind "ctrl-r:reload($RG_CMD | LC_ALL=C sort -r || echo 'No results found')" \
        --bind 'enter:execute-silent(nohup xdg-open {1})' \
        --bind "ctrl-o:execute-silent(tmux new-window -n 'nvim'  nvim {1}); tmux select-pane -T editor" \
        --bind "ctrl-e:execute-silent(~/.SearchFunctions/sub-functions/open_in_file_manager {1})" \
        --bind "ctrl-c:execute-silent(echo -n {1} | wl-copy)" \
		--bind "ctrl-t:execute-silent(tmux new-window -n infile ~/.SearchFunctions/sub-functions/search_in_single_file \"$(realpath \"{1}\"\"); tmux select-pane -T file-content)" \
		--bind "ctrl-u:execute-silent(tmux new-window -n diff ~/.SearchFunctions/sub-functions/show_logs \"$(realpath \"{1}\"\"); tmux select-pane -T git)" \
		--bind "alt-j:execute-silent(tmux new-window -n folders ~/.SearchFunctions/sub-functions/folder_list_rgfS; tmux select-pane -T folder-list)" \
		--bind "alt-u:execute-silent(tmux new-window -n logs ~/.SearchFunctions/sub-functions/git_log_file \"$(realpath \"{1}\"\"); tmux select-pane -T git)" \
		--bind "ctrl-j:execute-silent(tmux new-window -n files ~/.SearchFunctions/sub-functions/file_list; tmux select-pane -T file-list)" \
        --bind "ctrl-l:toggle-preview"

    if [[ -n "$TMUX" ]]; then
        tmux rename-window "$original_name"  # Restore original name
    fi
}
