f() {
    fd_cmd=(fd --type f --no-ignore "$@")
    reload_cmd=$(printf "%q " "${fd_cmd[@]}")

	process_cmd='
	awk -F"/" '\''{
	  if (NF > 1) {
		dir=substr($0, 1, length($0)-length($NF))
		gsub("/", "\x1b[33m/\x1b[34m", dir)
		file=$NF
		printf "0\t\x1b[34m%s\x1b[32m%s\x1b[0m\n", dir, file
	  } else {
		printf "2\t\x1b[32m%s\x1b[0m\n", $1
	  }
	}'\'' | LC_ALL=C sort -r -k1,1 -k2 | cut -f2-'

    "${fd_cmd[@]}" | eval "$process_cmd" | \
    fzf --exact --no-sort --ansi --style full --wrap --delimiter : \
        --preview 'batcat --color=always {}' --preview-window 'hidden' \
        --color 'fg:252,fg+:252,bg:234,bg+:235,hl:magenta,hl+:magenta,info:144,border:240,prompt:161,pointer:161,marker:118,spinner:118,header:168' \
        --bind "change:reload($reload_cmd | $process_cmd)" \
        --bind "ctrl-r:reload($reload_cmd | $process_cmd)" \
        --bind 'ctrl-l:toggle-preview' \
        --bind 'enter:execute-silent(nohup xdg-open {})' \
        --bind "ctrl-o:execute-silent(tmux new-window -n 'nvim' zsh -ic \"nvim {}\")" \
        --bind 'ctrl-e:execute-silent(echo {} | xargs -I % nohup dolphin --select "%")' \
        --bind "ctrl-c:execute-silent(echo -n {} | wl-copy)" \
		--bind "ctrl-t:execute-silent(tmux new-window -n search \"~/.SearchFunctions/sub-functions/search_in_single_file {}\")" \
		--bind "ctrl-u:execute-silent(tmux popup -E -w 95% -h 95% 'cd \"$PWD\" && zsh -ic \"show-logs {}\"')" \
		--bind "ctrl-p:execute-silent(tmux popup -E -w 95% -h 95% \"cd '$PWD' && ~/.SearchFunctions/sub-functions/search_in_single_file_popup {}\")" \
		--bind "alt-p:execute-silent(tmux popup -E -w 95% -h 95% 'cd \"$PWD\" && ~/.SearchFunctions/sub-functions/folder_list_ugrep')" \
		--bind "alt-u:execute-silent(tmux popup -E -w 95% -h 95% \"cd '$PWD' && ~/.SearchFunctions/sub-functions/git_log_file {}\")" \
        --bind 'home:last,end:first' \
        --bind 'alt-up:preview-page-up' \
        --bind 'alt-down:preview-page-down' \
        --preview-window='up:50%:wrap'
}
fh() {
    fd_cmd=(fd --type f --no-ignore --hidden "$@")
    reload_cmd=$(printf "%q " "${fd_cmd[@]}")

	process_cmd='
	awk -F"/" '\''{
	  if (NF > 1) {
		dir=substr($0, 1, length($0)-length($NF))
		gsub("/", "\x1b[33m/\x1b[34m", dir)
		file=$NF
		printf "0\t\x1b[34m%s\x1b[32m%s\x1b[0m\n", dir, file
	  } else {
		printf "2\t\x1b[32m%s\x1b[0m\n", $1
	  }
	}'\'' | LC_ALL=C sort -r -k1,1 -k2 | cut -f2-'

    "${fd_cmd[@]}" | eval "$process_cmd" | \
    fzf --exact --no-sort --ansi --style full --wrap --delimiter : \
        --preview 'batcat --color=always {}' --preview-window 'hidden' \
        --color 'fg:252,fg+:252,bg:234,bg+:235,hl:magenta,hl+:magenta,info:144,border:240,prompt:161,pointer:161,marker:118,spinner:118,header:168' \
        --bind "change:reload($reload_cmd | $process_cmd)" \
        --bind "ctrl-r:reload($reload_cmd | $process_cmd)" \
        --bind 'ctrl-l:toggle-preview' \
        --bind 'enter:execute-silent(nohup xdg-open {})' \
        --bind "ctrl-o:execute-silent(tmux new-window -n 'nvim' zsh -ic \"nvim {}\")" \
        --bind 'ctrl-e:execute-silent(echo {} | xargs -I % nohup dolphin --select "%")' \
        --bind "ctrl-c:execute-silent(echo -n {} | wl-copy)" \
		--bind "ctrl-t:execute-silent(tmux new-window -n search \"~/.SearchFunctions/sub-functions/search_in_single_file {}\")" \
		--bind "ctrl-u:execute-silent(tmux popup -E -w 95% -h 95% 'cd \"$PWD\" && zsh -ic \"show-logs {}\"')" \
		--bind "ctrl-p:execute-silent(tmux popup -E -w 95% -h 95% \"cd '$PWD' && ~/.SearchFunctions/sub-functions/search_in_single_file_popup {}\")" \
		--bind "alt-p:execute-silent(tmux popup -E -w 95% -h 95% 'cd \"$PWD\" && ~/.SearchFunctions/sub-functions/folder_list_ugrep')" \
		--bind "alt-u:execute-silent(tmux popup -E -w 95% -h 95% \"cd '$PWD' && ~/.SearchFunctions/sub-functions/git_log_file {}\")" \
        --bind 'home:last,end:first' \
        --bind 'alt-up:preview-page-up' \
        --bind 'alt-down:preview-page-down' \
        --preview-window='up:50%:wrap'
}
fg() {
    fd_cmd=(fd --type f "$@")
    reload_cmd=$(printf "%q " "${fd_cmd[@]}")

	process_cmd='
	awk -F"/" '\''{
	  if (NF > 1) {
		dir=substr($0, 1, length($0)-length($NF))
		gsub("/", "\x1b[33m/\x1b[34m", dir)
		file=$NF
		printf "0\t\x1b[34m%s\x1b[32m%s\x1b[0m\n", dir, file
	  } else {
		printf "2\t\x1b[32m%s\x1b[0m\n", $1
	  }
	}'\'' | LC_ALL=C sort -r -k1,1 -k2 | cut -f2-'

    "${fd_cmd[@]}" | eval "$process_cmd" | \
    fzf --exact --no-sort --ansi --style full --wrap --delimiter : \
        --preview 'batcat --color=always {}' --preview-window 'hidden' \
        --color 'fg:252,fg+:252,bg:234,bg+:235,hl:magenta,hl+:magenta,info:144,border:240,prompt:161,pointer:161,marker:118,spinner:118,header:168' \
        --bind "change:reload($reload_cmd | $process_cmd)" \
        --bind "ctrl-r:reload($reload_cmd | $process_cmd)" \
        --bind 'ctrl-l:toggle-preview' \
        --bind 'enter:execute-silent(nohup xdg-open {})' \
        --bind "ctrl-o:execute-silent(tmux new-window -n 'nvim' zsh -ic \"nvim {}\")" \
        --bind 'ctrl-e:execute-silent(echo {} | xargs -I % nohup dolphin --select "%")' \
        --bind "ctrl-c:execute-silent(echo -n {} | wl-copy)" \
		--bind "ctrl-t:execute-silent(tmux new-window -n search \"~/.SearchFunctions/sub-functions/search_in_single_file {}\")" \
		--bind "ctrl-u:execute-silent(tmux popup -E -w 95% -h 95% 'cd \"$PWD\" && zsh -ic \"show-logs {}\"')" \
		--bind "ctrl-p:execute-silent(tmux popup -E -w 95% -h 95% \"cd '$PWD' && ~/.SearchFunctions/sub-functions/search_in_single_file_popup {}\")" \
		--bind "alt-p:execute-silent(tmux popup -E -w 95% -h 95% 'cd \"$PWD\" && ~/.SearchFunctions/sub-functions/folder_list_ugrep')" \
		--bind "alt-u:execute-silent(tmux popup -E -w 95% -h 95% \"cd '$PWD' && ~/.SearchFunctions/sub-functions/git_log_file {}\")" \
        --bind 'home:last,end:first' \
        --bind 'alt-up:preview-page-up' \
        --bind 'alt-down:preview-page-down' \
        --preview-window='up:50%:wrap'
}
