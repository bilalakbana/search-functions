#!/bin/bash

file=$(readlink -f "$1")
dir=$(dirname "$file")

cd "$dir" || { echo -e "\033[31mCannot cd into file directory.\033[0m"; echo "Press any key to exit..."; stty raw -echo; dd bs=1 count=1 2>/dev/null; stty -raw echo; return; }

repo_root=$(git rev-parse --show-toplevel 2>/dev/null)
if [[ -z "$repo_root" ]]; then
    echo -e "\033[31mNot inside a Git repository.\033[0m"
    echo "Press any key to exit..."
    stty raw -echo
    dd bs=1 count=1 2>/dev/null
    stty -raw echo
    exit
fi

COLUMNS=$(tput cols)
HR=$(printf '%*s' "$COLUMNS" '' | tr ' ' '-')

export LESS="-RX -+F"

submodule_path=$(cd "$repo_root" && git config --file .gitmodules --get-regexp path 2>/dev/null | while read -r _ path; do
    [[ "$file" == *"$path"* ]] && echo "$path" && break
done)

if [[ -n "$submodule_path" ]]; then
    relative_path="${file#*$submodule_path/}"
    cd "$repo_root/$submodule_path" || { echo -e "\033[31mCannot cd into submodule.\033[0m"; echo "Press any key to exit..."; stty raw -echo; dd bs=1 count=1 2>/dev/null; stty -raw echo; return; }

    if ! git ls-files --error-unmatch "$relative_path" >/dev/null 2>&1; then
        echo -e "\033[31m⚡ File is not tracked in Git:\033[0m $relative_path"
        echo "Press any key to exit..."
        stty raw -echo
        dd bs=1 count=1 2>/dev/null
        stty -raw echo
        return
    fi
else
    relative_path="${file#$repo_root/}"
    cd "$repo_root" || { echo -e "\033[31mCannot cd into repo root.\033[0m"; echo "Press any key to exit..."; stty raw -echo; dd bs=1 count=1 2>/dev/null; stty -raw echo; return; }

    if ! git ls-files --error-unmatch "$relative_path" >/dev/null 2>&1; then
        echo -e "\033[31m⚡ File is not tracked in Git:\033[0m $relative_path"
        echo "Press any key to exit..."
        stty raw -echo
        dd bs=1 count=1 2>/dev/null
        stty -raw echo
        exit
    fi
fi

(
    git log --color=always --format=$'commit %Cblue%h%Creset%n%Cred→ Author:%Creset %an%n%Cgreen→ Date:%Creset %ad \033[33m(%ar)\033[0m%n%Cred→ Message:%Creset %s%n'"$HR" \
        --date=format:'%Y-%m-%d %H:%M:%S' -p --no-prefix --unified=3 "$relative_path"
) | awk '/^commit / { print "\n" $0; next } /^diff --git / { print "\n" $0; next } { print }' \
  | git-split-diffs --color --width="${COLUMNS}" --full-width -- | less
